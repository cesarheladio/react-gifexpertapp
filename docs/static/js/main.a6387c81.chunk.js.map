{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","components/hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","i","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAEaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAc5C,OACI,uBAAMC,SATU,SAACC,GACjBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAKlB,UACI,8CACA,uBACAO,KAAK,OACLC,MAAOT,EACPU,SAlBkB,SAACP,GAEzBF,EAAcE,EAAEQ,OAAOF,c,+BCLhBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACkCC,UAAUH,GAD5C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARvB,kBAWbM,GAXa,4CAAH,sDCCPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEjC,OADAc,QAAQC,IAAIL,EAAOV,GAEf,sBAAKgB,UAAU,yCAAf,UACG,qBAAKC,IAAMjB,EACXkB,IAAMR,IACN,kCAAKA,SCHHS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECFX,SAAEA,GAAe,IAAD,EAChBd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAH6B,mBACnCC,EADmC,KAC5BC,EAD4B,KAkB1C,OAZAC,qBAAU,WACR1B,EAASC,GACR0B,MAAM,SAAAC,GACHH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAGhB,CAACtB,IAIGuB,EDb2BK,CAAc5B,GAAjCa,EAHsB,EAG3BN,KAAae,EAHc,EAGdA,QACrB,OACI,qCACI,oBAAIJ,UAAW,oCAAf,SAAoDlB,IACpDsB,GAAW,2CACf,qBAAKJ,UAAU,YAAf,SAEUL,EAAOJ,KAAI,SAAAoB,GAAC,OACd,cAAC,EAAD,eAEIA,GADCA,EAAElB,aEbVmB,EAAe,WAAM,MAEM5C,mBAAS,CAAC,gBAFhB,mBAEvB6C,EAFuB,KAEX9C,EAFW,KAO9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ8C,EAAWtB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAECA,SAAWA,GADPA,Y,MChB7BgC,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.a6387c81.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport Proptypes from 'prop-types'\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('')\r\n    const handleInputChange = (e) =>{\r\n       \r\n      setInputValue(e.target.value)\r\n    }\r\n    const handleSubmit =(e) =>{\r\n        e.preventDefault()\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(cats => [inputValue, ...cats])\r\n            setInputValue(\"\")\r\n        }\r\n       \r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h2>Add category</h2>\r\n            <input\r\n            type=\"text\" \r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes ={\r\nsetCategories: Proptypes.func.isRequired\r\n}","\r\nexport const getGifs = async( category )=>{\r\n    const url =`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category) }&limit=10&api_key=pYof666baCI7Re15SXAjAZznBW5sGN2Z`;        \r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map(img =>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n   return gifs\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {title, url} ) => {   \r\n    console.log(title, url);\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n           <img src={ url } \r\n           alt={ title } />\r\n           <p> {title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from './hooks/useFetchGifs'\r\n//import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n  \r\n \r\n    const { data:images, loading} = useFetchGifs( category )    \r\n    return (\r\n        <>\r\n            <h3 className =\"animate__animated animate__bounce\">{category}</h3>\r\n          { loading && <p> cargando </p>}\r\n        <div className=\"card-grid\">\r\n           \r\n                { images.map(i=>(\r\n                <GifGridItem \r\n                key={i.id}\r\n                {...i}/>)\r\n                )}\r\n               \r\n           \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../../helpers/getGifs\"\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n  const [state, setstate] = useState({\r\n      data: [],\r\n      loading: true\r\n  })\r\n\r\n  useEffect(() => {\r\n    getGifs( category )\r\n    .then( imgs => {\r\n        setstate({\r\n            data: imgs,\r\n            loading: false\r\n        })\r\n    } )\r\n  }, [category])\r\n\r\n \r\n\r\n  return state\r\n}\r\n","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n    //const categories = ['one punch', 'samuri x', 'dragon Ball']\r\n    const [categories, setCategories] = useState(['dragon Ball'])\r\n    // const handleadd = () =>{\r\n    //     setCategories(cats=> [...cats,'hola'])\r\n    //     //setCategories([...categories, 'hola'])\r\n    // }\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories ={setCategories}/>\r\n            <hr/>\r\n           \r\n            <ol>\r\n                {\r\n                    categories.map( category=>\r\n                        <GifGrid\r\n                        key={category}\r\n                         category ={category}/>)\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n\n    <GifExpertApp />,\n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}